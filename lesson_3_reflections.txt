When would you want to use a remote repository rather than keeping all your work local?
  When I'm satisfied with the changes and I want to publish it.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	We might not want every change to get updated in the remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks are used when cloning within Github from one account to another, clones are the copy of original Git repository done from Github to local system, and branches are making new commits but out of the track of original commit trail.

What is the benefit of having a copy of the last known state of the remote stored locally?
	In that way we can be in sync with the Github repository and will be able to trace back to parent commit easily.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Without Git, I would have to manually keep track of the bug and for fixing bugs I would have to debug the entire code.
	GitHub makes debugging, colaboration easier. The only thing with using Git is that we have learn first how to use it, but I'm seeing its worth.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	If I want to try and test out things first then I would first branch out. This way I could back to master if I did not like the branch work. If I'm quite confident with the approach then I can directly update the master. This would save time.